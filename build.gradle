apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'com.moowork.grunt'

mainClassName = 'com.razor.movies.server.EntryPoint'

buildscript {
    repositories {
        jcenter()
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
    }
    dependencies {
        classpath(
                [group: 'com.moowork.gradle', name: 'gradle-node-plugin', version: '0.8'],
                [group: 'com.moowork.gradle', name: 'gradle-grunt-plugin', version: '0.9']
        )
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

ext {
    gebSpockVersion = '0.9.0'
    spockVersion = '0.7-groovy-2.0'
    testngVersion = '6.7'
    junitVersion = '4.10'
}

dependencies {

    compile(
            [group: 'org.slf4j', name:'slf4j-api', version:'1.7.10'],
            [group: 'com.google.guava',          name: 'guava', version: '18.0'],
            [group: 'com.google.code.gson', name:'gson', version:'2.3.1'],
            [group: 'org.mongodb', name:'mongo-java-driver', version:'3.0.0'],
            [group: 'org.mongodb.morphia', name:'morphia', version:'0.110'],
            [group: 'org.jongo', name:'jongo', version:'1.2'],
            [group: 'com.sparkjava', name: 'spark-core', version: '2.1'],
            [group: 'org.aeonbits.owner', name: 'owner', version: '1.0.6']
    )

    testCompile(
            [ group: 'org.testng',                 name: 'testng',              version: testngVersion ],
            [ group: 'junit',                      name: 'junit-dep',           version: junitVersion ],
            [ group: 'org.hamcrest',               name: 'hamcrest-all',        version: '1.3' ],
            [ group: 'org.spockframework',         name: 'spock-core',          version: spockVersion ],
            [ group: 'org.mockito',                name: 'mockito-all',         version: '1.9.5' ],
            [ group: 'org.gebish',                 name: 'geb-spock',           version: gebSpockVersion ]
    )
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

npmInstall{
    outputs.upToDateWhen { false }
}
// makes sure on each build that grunt is installed
grunt_build.dependsOn 'installGrunt'

// processes your package.json before running grunt build
grunt_build.dependsOn 'npmInstall'

// runs "grunt build" as part of your gradle build
build.dependsOn grunt_build

// runs "grunt test" as part of your gradle test
// test.dependsOn grunt_test